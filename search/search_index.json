{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting started Welcome to imdby imdby is a Python3 library! View on Github here . Source Link PyPI: https://pypi.org/project/imdby/ Repository: https://github.com/santhoshse7en/imdby/ Documentation: https://santhoshse7en.github.io/imdby_doc/ Main features imdby is a Python package useful to retrieve and manage the data of the IMDb movie database about movies, people, characters and companies. Sentiment Analysis for IMDb user reviews is included. imdby package can be very easily used by programmers and developers to provide access to the IMDb's data to their programs. Platform-independent and written in Python 3 it can retrieve data from both the IMDb's web server and a local copy of the whole database. Some simple example scripts - useful for the end users - are included in this package; imdby powers many other software and has been used in various research papers. Curious about that? A Glance # create an instance of the IMDb class from imdby.imdb import imdb # get a movie details = imdb('tt4154796') # print the names of the directors of the movie print('Directors:') for i in range(len(details.directors)): print(details.directors[i]) # print the genres of the movie print('Genres:') for i in range(len(details.genre)): print(details.genre[i])","title":"Home"},{"location":"#getting-started","text":"","title":"Getting started"},{"location":"#welcome-to-imdby","text":"imdby is a Python3 library! View on Github here . Source Link PyPI: https://pypi.org/project/imdby/ Repository: https://github.com/santhoshse7en/imdby/ Documentation: https://santhoshse7en.github.io/imdby_doc/","title":"Welcome to imdby"},{"location":"#main-features","text":"imdby is a Python package useful to retrieve and manage the data of the IMDb movie database about movies, people, characters and companies. Sentiment Analysis for IMDb user reviews is included. imdby package can be very easily used by programmers and developers to provide access to the IMDb's data to their programs. Platform-independent and written in Python 3 it can retrieve data from both the IMDb's web server and a local copy of the whole database. Some simple example scripts - useful for the end users - are included in this package; imdby powers many other software and has been used in various research papers. Curious about that?","title":"Main features"},{"location":"#a-glance","text":"# create an instance of the IMDb class from imdby.imdb import imdb # get a movie details = imdb('tt4154796') # print the names of the directors of the movie print('Directors:') for i in range(len(details.directors)): print(details.directors[i]) # print the genres of the movie print('Genres:') for i in range(len(details.genre)): print(details.genre[i])","title":"A Glance"},{"location":"about/","text":"imdby The film industry is a business cloud for millions in investment and its multiple in revenue. Story rights, production costs, cast remunerations, film promotions etc. charges the production companies. This makes movie analytics inevitably essential for the success of a film and survival of the industry. It has been written in pure Python 3 which make the code Platform-independent. Can retrieve data from both the IMDb's web server and a local copy of the whole database. Contributing Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Please make sure to update tests as appropriate. License MIT","title":"About"},{"location":"about/#imdby","text":"The film industry is a business cloud for millions in investment and its multiple in revenue. Story rights, production costs, cast remunerations, film promotions etc. charges the production companies. This makes movie analytics inevitably essential for the success of a film and survival of the industry. It has been written in pure Python 3 which make the code Platform-independent. Can retrieve data from both the IMDb's web server and a local copy of the whole database.","title":"imdby"},{"location":"about/#contributing","text":"Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Please make sure to update tests as appropriate.","title":"Contributing"},{"location":"about/#license","text":"MIT","title":"License"},{"location":"basic/","text":"Quickstart Eager to get started? This page gives a good introduction in how to get started with imdby. This assumes you already have imdby installed. If you do not, head over to the Installation section. Building a IMDb source Source objects are an abstraction of online multi-media content websites IMDb Building a Source will extract its movie, cast_and_crew, plot, plot_keywords, company, parental_guide, techincal_spec, release_info, taglines, external_sites, user_reviews for you Extracting IMDb Movie Information You may also provide configuration parameters like titleid to create an instance of the IMDb class. >>> from imdby.imdb import imdb >>> details = imdb('tt4154796') Every IMDb movie source has a set of infos like. Basic Movie Information Plot Plot Keywords Cast and Crew Company Release Info Taglines Parental Guide Technical Spec The output of details directory. Example of Extracting Movie Title >>> details.title 'Avengers: Endgame' Extracting External Sites Info You may also provide configuration parameters like titleid to create an instance of the IMDb class. >>> from imdby.external_sites import imdb >>> external_sites = imdb('tt4154796') Every IMDb movie external_sites source has a set of infos like. Official Sites Miscellaneous Sites Photographs Video Clips and Trailers The output of external_sites directory. Example of Extracting Movie Official Sites >>> external_sites.official_sites_df.head() Extracting User Reviews Info You may also provide configuration parameters like titleid to create an instance of the IMDb class. >>> from imdby.user_reviews import imdb >>> user_reviews = imdb('tt4154796') Every IMDb movie user_reviews source has a set of infos like. User Reviews User Reviews Sentiment Analysis The output of user_reviews directory. Example of Extracting User Reviews for the Movie >>> user_reviews.user_reviews_df.head() Extracting Crtic Reviews Info You may also provide configuration parameters like titleid to create an instance of the IMDb class. >>> from imdby.critic_reviews import imdb >>> critic_reviews = imdb('tt4154796') Every IMDb movie critic_reviews source has a set of infos like. User Reviews The output of critic_reviews directory. Example of Extracting Critic Reviews for the Movie >>> critic_reviews.critic_reviews_df.head() Search Person Name & Person ID You may also provide configuration parameters like text to create an instance of the IMDb class. >>> from imdby.search_person import imdb >>> person = imdb('mouli') Manual Person Name selection done IMDb movie search person source has a set of infos like. Person Name Person ID The output of search_person directory. >>> print(dir(person)) Example of Extracting Person ID >>> person_person_id 'nm1442514' Search Title Name & Person ID You may also provide configuration parameters like text to create an instance of the IMDb class. >>> from imdby.search_title import imdb >>> title = imdb('entiran') Manual Title Name selection done IMDb movie search title source has a set of infos like. Title Name Title ID The output of search_title directory. >>> print(dir(title)) Example of Extracting Title ID >>> title_title_id 'tt1305797' Search Company Name & Person ID You may also provide configuration parameters like text to create an instance of the IMDb class. >>> from imdby.search_company import imdb >>> company = imdb('warner') Manual Title Name selection done IMDb movie search company source has a set of infos like. Company Name Company ID The output of search_company directory. >>> print(dir(company)) Example of Extracting Company ID >>> company_company_id 'co0423665'","title":"Tutorials"},{"location":"basic/#quickstart","text":"Eager to get started? This page gives a good introduction in how to get started with imdby. This assumes you already have imdby installed. If you do not, head over to the Installation section. Building a IMDb source Source objects are an abstraction of online multi-media content websites IMDb Building a Source will extract its movie, cast_and_crew, plot, plot_keywords, company, parental_guide, techincal_spec, release_info, taglines, external_sites, user_reviews for you","title":"Quickstart"},{"location":"basic/#extracting-imdb-movie-information","text":"You may also provide configuration parameters like titleid to create an instance of the IMDb class. >>> from imdby.imdb import imdb >>> details = imdb('tt4154796') Every IMDb movie source has a set of infos like. Basic Movie Information Plot Plot Keywords Cast and Crew Company Release Info Taglines Parental Guide Technical Spec The output of details directory. Example of Extracting Movie Title >>> details.title 'Avengers: Endgame'","title":"Extracting IMDb Movie Information"},{"location":"basic/#extracting-external-sites-info","text":"You may also provide configuration parameters like titleid to create an instance of the IMDb class. >>> from imdby.external_sites import imdb >>> external_sites = imdb('tt4154796') Every IMDb movie external_sites source has a set of infos like. Official Sites Miscellaneous Sites Photographs Video Clips and Trailers The output of external_sites directory. Example of Extracting Movie Official Sites >>> external_sites.official_sites_df.head()","title":"Extracting External Sites Info"},{"location":"basic/#extracting-user-reviews-info","text":"You may also provide configuration parameters like titleid to create an instance of the IMDb class. >>> from imdby.user_reviews import imdb >>> user_reviews = imdb('tt4154796') Every IMDb movie user_reviews source has a set of infos like. User Reviews User Reviews Sentiment Analysis The output of user_reviews directory. Example of Extracting User Reviews for the Movie >>> user_reviews.user_reviews_df.head()","title":"Extracting User Reviews Info"},{"location":"basic/#extracting-crtic-reviews-info","text":"You may also provide configuration parameters like titleid to create an instance of the IMDb class. >>> from imdby.critic_reviews import imdb >>> critic_reviews = imdb('tt4154796') Every IMDb movie critic_reviews source has a set of infos like. User Reviews The output of critic_reviews directory. Example of Extracting Critic Reviews for the Movie >>> critic_reviews.critic_reviews_df.head()","title":"Extracting Crtic Reviews Info"},{"location":"basic/#search-person-name-person-id","text":"You may also provide configuration parameters like text to create an instance of the IMDb class. >>> from imdby.search_person import imdb >>> person = imdb('mouli') Manual Person Name selection done IMDb movie search person source has a set of infos like. Person Name Person ID The output of search_person directory. >>> print(dir(person)) Example of Extracting Person ID >>> person_person_id 'nm1442514'","title":"Search Person Name &amp; Person ID"},{"location":"basic/#search-title-name-person-id","text":"You may also provide configuration parameters like text to create an instance of the IMDb class. >>> from imdby.search_title import imdb >>> title = imdb('entiran') Manual Title Name selection done IMDb movie search title source has a set of infos like. Title Name Title ID The output of search_title directory. >>> print(dir(title)) Example of Extracting Title ID >>> title_title_id 'tt1305797'","title":"Search Title Name &amp; Person ID"},{"location":"basic/#search-company-name-person-id","text":"You may also provide configuration parameters like text to create an instance of the IMDb class. >>> from imdby.search_company import imdb >>> company = imdb('warner') Manual Title Name selection done IMDb movie search company source has a set of infos like. Company Name Company ID The output of search_company directory. >>> print(dir(company)) Example of Extracting Company ID >>> company_company_id 'co0423665'","title":"Search Company Name &amp; Person ID"},{"location":"development/","text":"Development If you\u2019d like to contribute and hack on the imdby project, feel free to clone a development version of this repository locally: git clone git://github.com/santhoshse7en/imdby.git Once you have a copy of the source, you can embed it in your Python package, or install it into your site-packages easily: $ pip install -r requirements.txt $ python setup.py install Feel free to give our testing suite a shot: $ python imdby/imdb.py","title":"Development"},{"location":"development/#development","text":"If you\u2019d like to contribute and hack on the imdby project, feel free to clone a development version of this repository locally: git clone git://github.com/santhoshse7en/imdby.git Once you have a copy of the source, you can embed it in your Python package, or install it into your site-packages easily: $ pip install -r requirements.txt $ python setup.py install Feel free to give our testing suite a shot: $ python imdby/imdb.py","title":"Development"},{"location":"installation/","text":"Installation This part of the documentation covers the installation of newspaper. The first step to using any software package is getting it properly installed. Dependencies beautifulsoup4 selenium chromedriver-binary vaderSentiment textblob pandas Distribute & Pip Installing imdby is simple with pip. $ pip install imdby Get the Code imdby is actively developed on GitHub, where the code is always available . You can clone the public repository: git clone git://github.com/santhoshse7en/imdby.git Once you have a copy of the source, you can embed it in your Python package, or install it into your site-packages easily: $ pip install -r requirements.txt $ python setup.py install Feel free to give our testing suite a shot: $ python imdby/imdb.py","title":"Installation"},{"location":"installation/#installation","text":"This part of the documentation covers the installation of newspaper. The first step to using any software package is getting it properly installed.","title":"Installation"},{"location":"installation/#dependencies","text":"beautifulsoup4 selenium chromedriver-binary vaderSentiment textblob pandas","title":"Dependencies"},{"location":"installation/#distribute-pip","text":"Installing imdby is simple with pip. $ pip install imdby","title":"Distribute &amp; Pip"},{"location":"installation/#get-the-code","text":"imdby is actively developed on GitHub, where the code is always available . You can clone the public repository: git clone git://github.com/santhoshse7en/imdby.git Once you have a copy of the source, you can embed it in your Python package, or install it into your site-packages easily: $ pip install -r requirements.txt $ python setup.py install Feel free to give our testing suite a shot: $ python imdby/imdb.py","title":"Get the Code"}]}